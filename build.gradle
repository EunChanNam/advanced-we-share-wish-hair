plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.inq.wish-hair'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

jar {
	enabled = false
}

jacoco {
	toolVersion = "0.8.9"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//P6Spy
	implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0")

	//javax.annotation import 버그 해결
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'javax.xml.bind:jaxb-api:2.3.0' //jwt 토큰 생성시 에러 해결

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//spring
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가

	//DB
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'

	//네이버 클라우드
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

def querydslDir = "src/main/generated"

sourceSets {
	main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.required = true
		xml.destination file("${buildDir}/jacoco/jacocoTestReports.xml")
		html.destination file("${buildDir}/jacoco/")
	}

	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, excludes: [
							'**/*Application*',
							"**/config/**",
							"**/exception/**",
							"**/dto/**"
					])
				})
		)
	}
}